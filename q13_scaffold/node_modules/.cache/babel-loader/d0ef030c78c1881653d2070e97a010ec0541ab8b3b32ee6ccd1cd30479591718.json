{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\OneDrive\\\\Desktop\\\\Starting with React\\\\q13_scaffold\\\\src\\\\App.js\";\nimport \"./styles.css\";\nimport React from \"react\";\nimport Image from \"./components/Image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      photos: [],\n      // State to store fetched photos\n      loading: false // State to manage loading status\n    };\n  }\n\n  // Use the required lifecycle methods here\n  // Make an API call to fetch images and update state accordingly\n  // Ensure that loading is set to true before the API request and false after data is fetched\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/albums/1/photos').then(response => response.json()).then(photos => console.log(photos.url));\n  }\n  render() {\n    // Display loading status here\n    // If loading is true, display the message \"Loading...\"\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: this.state.photos.map(photo => {\n        return /*#__PURE__*/_jsxDEV(Image, {\n          photo: photo\n        }, photo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Image","jsxDEV","_jsxDEV","App","Component","constructor","state","photos","loading","componentDidMount","fetch","then","response","json","console","log","url","render","className","children","map","photo","id","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/divya/OneDrive/Desktop/Starting with React/q13_scaffold/src/App.js"],"sourcesContent":["import \"./styles.css\";\nimport React from \"react\";\nimport Image from \"./components/Image\";\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      photos: [],   // State to store fetched photos\n      loading: false   // State to manage loading status\n    };\n  }\n\n  // Use the required lifecycle methods here\n  // Make an API call to fetch images and update state accordingly\n  // Ensure that loading is set to true before the API request and false after data is fetched\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/albums/1/photos')\n      .then(response => response.json())\n      .then(photos => console.log(photos.url))\n  }\n\n  render() {\n    // Display loading status here\n    // If loading is true, display the message \"Loading...\"\n    return (\n      <div className=\"App\">\n        {this.state.photos.map((photo) => {\n          return <Image key={photo.id} photo={photo} />;\n        })}\n      </div>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAO,cAAc;AACrB,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,MAAMC,GAAG,SAASJ,KAAK,CAACK,SAAS,CAAC;EAC/CC,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG;MACXC,MAAM,EAAE,EAAE;MAAI;MACdC,OAAO,EAAE,KAAK,CAAG;IACnB,CAAC;EACH;;EAEA;EACA;EACA;EACAC,iBAAiBA,CAAA,EAAE;IACjBC,KAAK,CAAC,sDAAsD,CAAC,CAC1DC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACJ,MAAM,IAAIO,OAAO,CAACC,GAAG,CAACR,MAAM,CAACS,GAAG,CAAC,CAAC;EAC5C;EAEAC,MAAMA,CAAA,EAAG;IACP;IACA;IACA,oBACEf,OAAA;MAAKgB,SAAS,EAAC,KAAK;MAAAC,QAAA,EACjB,IAAI,CAACb,KAAK,CAACC,MAAM,CAACa,GAAG,CAAEC,KAAK,IAAK;QAChC,oBAAOnB,OAAA,CAACF,KAAK;UAAgBqB,KAAK,EAAEA;QAAM,GAAvBA,KAAK,CAACC,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CAAC;MAC/C,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}