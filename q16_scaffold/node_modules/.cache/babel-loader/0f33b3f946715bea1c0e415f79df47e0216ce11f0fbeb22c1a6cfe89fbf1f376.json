{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\OneDrive\\\\Desktop\\\\Starting with React\\\\q16_scaffold\\\\src\\\\components\\\\ImageList.js\";\nimport React from \"react\";\nimport Image from \"./Image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ImageList extends React.Component {\n  // Create Lifecycle method to prevent re render of the list if some spaces are present.\n  // Use the shouldComponentUpdate lifecycle method here\n  // Step1: Ensure valid images are at least 5 characters long and have no leading/trailing spaces\n  // Step2: Only re-render if all images are valid\n\n  // shouldComponentUpdate(nextprops) {\n  // nextprops.images.every((image)=>console.log(image));\n  //   return nextprops.images.every(\n  //     (image) => image.length >= 5 && image === image.trim()\n  //   );\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-list\",\n      children: this.props.images.map((image, index) => {\n        return /*#__PURE__*/_jsxDEV(Image, {\n          image: image\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Image","jsxDEV","_jsxDEV","ImageList","Component","render","className","children","props","images","map","image","index","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/divya/OneDrive/Desktop/Starting with React/q16_scaffold/src/components/ImageList.js"],"sourcesContent":["import React from \"react\";\r\nimport Image from \"./Image\";\r\n\r\nexport default class ImageList extends React.Component {\r\n  // Create Lifecycle method to prevent re render of the list if some spaces are present.\r\n  // Use the shouldComponentUpdate lifecycle method here\r\n  // Step1: Ensure valid images are at least 5 characters long and have no leading/trailing spaces\r\n  // Step2: Only re-render if all images are valid\r\n\r\n  // shouldComponentUpdate(nextprops) {\r\n  // nextprops.images.every((image)=>console.log(image));\r\n  //   return nextprops.images.every(\r\n  //     (image) => image.length >= 5 && image === image.trim()\r\n  //   );\r\n  // }\r\n  render() {\r\n    return (\r\n      <div className=\"image-list\">\r\n        {this.props.images.map((image, index) => {\r\n          return <Image key={index} image={image} />;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe,MAAMC,SAAS,SAASJ,KAAK,CAACK,SAAS,CAAC;EACrD;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACAC,MAAMA,CAAA,EAAG;IACP,oBACEH,OAAA;MAAKI,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxB,IAAI,CAACC,KAAK,CAACC,MAAM,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;QACvC,oBAAOV,OAAA,CAACF,KAAK;UAAaW,KAAK,EAAEA;QAAM,GAApBC,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CAAC;MAC5C,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}